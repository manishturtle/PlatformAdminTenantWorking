# Generated by Django 5.2 on 2025-05-05 07:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoredResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human-readable name for the resource/module (e.g., Product Catalog, User Management)', max_length=255)),
                ('identifier', models.CharField(db_index=True, help_text="Unique machine-readable identifier (e.g., 'app_label.model_name' like 'catalog.product' or a custom slug)", max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the resource/module.')),
            ],
            options={
                'verbose_name': 'Monitored Resource (Module)',
                'verbose_name_plural': 'Monitored Resources (Modules)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModulePermissionSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="Optional descriptive name for this permission set (e.g., 'Read Only Access', 'Full Admin', 'Editor Role for Products')", max_length=150)),
                ('can_create', models.BooleanField(default=False, verbose_name='Allow Create')),
                ('can_read', models.BooleanField(default=False, verbose_name='Allow Read/View')),
                ('can_update', models.BooleanField(default=False, verbose_name='Allow Update/Edit')),
                ('can_delete', models.BooleanField(default=False, verbose_name='Allow Delete')),
                ('field_permissions', models.JSONField(blank=True, default=dict, help_text="Define specific field read/write access. E.g., {'price': {'read': True, 'write': False}}")),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_sets', to='role_management.monitoredresource', verbose_name='Module/Resource')),
            ],
            options={
                'verbose_name': 'Module Permission Set',
                'verbose_name_plural': 'Module Permission Sets',
                'ordering': ['resource__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Inactive roles grant no permissions.')),
                ('assigned_permissions', models.ManyToManyField(blank=True, related_name='assigned_to_roles', to='role_management.modulepermissionset', verbose_name='Granted Module Permissions')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Assignment Date')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='role_management.role', verbose_name='Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Role Assignment',
                'verbose_name_plural': 'User Role Assignments',
                'ordering': ['user__username', 'role__name'],
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.AddField(
            model_name='role',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='roles', through='role_management.UserRoleAssignment', through_fields=('role', 'user'), to=settings.AUTH_USER_MODEL, verbose_name='Assigned Users'),
        ),
    ]
